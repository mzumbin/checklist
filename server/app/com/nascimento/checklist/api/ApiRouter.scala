package com.nascimento.checklist.api

import akka.actor.ActorSystem
import com.google.inject.Inject
import com.nascimento.checklist.services.BookServices
import com.nascimento.checklist.shared.endpoints.Endpoints.addBook
import play.api.routing.Router.Routes
import play.api.routing.SimpleRouter
import sttp.tapir._
import sttp.tapir.server.play.PlayServerInterpreter
import sttp.tapir.server.play.PlayServerInterpreter._
import sttp.tapir.server.play._
import sttp.tapir.swagger.play.SwaggerPlay

import javax.inject.Singleton
import scala.concurrent.ExecutionContext
@Singleton
class  ApiRouter @Inject()( bookServices: BookServices)(implicit ec: ExecutionContext, actorSystem: ActorSystem) extends SimpleRouter {
  val prefix = "api"
  override def routes: Routes = {
    import sttp.tapir.server.play.PlayServerInterpreter._
    // Routes generated by Tapir (see above)

    bookServices.bookRoute.orElse(new SwaggerPlay(openapiYamlDocumentation).routes)

  }

  def openapiYamlDocumentation: String = {
    import sttp.tapir.docs.openapi._
    import sttp.tapir.openapi.circe.yaml._


    // interpreting the endpoint description to generate yaml openapi documentation

    val docs = OpenAPIDocsInterpreter.toOpenAPI(List(addBook),"The Tapir Library", "1.0")
    docs.toYaml
  }
}
